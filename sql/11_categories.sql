USE ONLINESTOREDB;
GO
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
GO

/* 1) Categories table */
IF OBJECT_ID(N'dbo.Categories', N'U') IS NULL
    BEGIN
        CREATE TABLE DBO.CATEGORIES (
            CATEGORYID INT IDENTITY (1, 1) PRIMARY KEY,
            NAME NVARCHAR(100) NOT NULL UNIQUE,
            DESCRIPTION NVARCHAR(255) NULL,
            CREATEDAT DATETIME2(0) NOT NULL CONSTRAINT DF_CATEGORIES_CREATEDAT DEFAULT SYSUTCDATETIME(),
            UPDATEDAT DATETIME2(0) NOT NULL CONSTRAINT DF_CATEGORIES_UPDATEDAT DEFAULT SYSUTCDATETIME()
        );
    END;
GO

/* 2) Products.CategoryID (1→many) */
IF COL_LENGTH('dbo.Products', 'CategoryID') IS NULL
    BEGIN
        ALTER TABLE DBO.PRODUCTS ADD CATEGORYID INT NULL;
        ALTER TABLE DBO.PRODUCTS WITH CHECK
        ADD CONSTRAINT FK_PRODUCTS_CATEGORIES FOREIGN KEY (CATEGORYID)
        REFERENCES DBO.CATEGORIES (CATEGORYID);
        IF
            NOT EXISTS (
                SELECT 1 FROM SYS.INDEXES
                WHERE NAME = 'IX_Products_CategoryID' AND OBJECT_ID = OBJECT_ID('dbo.Products')
            )
            CREATE INDEX IX_PRODUCTS_CATEGORYID ON DBO.PRODUCTS (CATEGORYID);
    END;
GO

/* 3) Seed some common categories (idempotent) */
MERGE DBO.CATEGORIES AS TGT
USING (
    VALUES
    (N'Accessories', N'Peripherals and small add-ons'),
    (N'Electronics', N'Audio and core devices'),
    (N'Cables', N'Connectivity and wires'),
    (N'Uncategorized', N'Default bucket')
) AS SRC (NAME, DESCRIPTION)
    ON TGT.NAME = SRC.NAME
WHEN NOT MATCHED
    THEN
    INSERT (NAME, DESCRIPTION) VALUES (SRC.NAME, SRC.DESCRIPTION);
GO

/* 4) Map existing products heuristically (only if NULL) */
UPDATE P SET CATEGORYID = C.CATEGORYID
FROM DBO.PRODUCTS AS P
INNER JOIN DBO.CATEGORIES AS C
    ON
        (C.NAME = N'Accessories' AND (P.NAME LIKE N'%Mouse%' OR P.NAME LIKE N'%Keyboard%' OR P.NAME LIKE N'%Stand%'))
        OR (C.NAME = N'Electronics' AND P.NAME LIKE N'%Headphone%')
        OR (C.NAME = N'Cables' AND P.NAME LIKE N'%Cable%')
WHERE P.CATEGORYID IS NULL;
GO

/* Any remaining NULLs → Uncategorized */
UPDATE P SET CATEGORYID = C.CATEGORYID
FROM DBO.PRODUCTS AS P
CROSS JOIN DBO.CATEGORIES AS C
WHERE P.CATEGORYID IS NULL AND C.NAME = N'Uncategorized';
GO

/* 5) Category Sales (last 30 days) — no ORDER BY inside the view */
CREATE OR ALTER VIEW DBO.VWCATEGORYSALES30D AS
SELECT
    C.CATEGORYID,
    C.NAME AS CATEGORYNAME,
    COUNT(DISTINCT O.ORDERID) AS ORDERS,
    SUM(OD.QUANTITY) AS UNITS,
    SUM(OD.SUBTOTAL) AS REVENUE
FROM DBO.ORDERDETAILS AS OD
INNER JOIN DBO.ORDERS AS O ON OD.ORDERID = O.ORDERID
INNER JOIN DBO.PRODUCTS AS P ON OD.PRODUCTID = P.PRODUCTID
INNER JOIN DBO.CATEGORIES AS C ON P.CATEGORYID = C.CATEGORYID
WHERE O.ORDERDATE >= DATEADD(DAY, -30, SYSUTCDATETIME())
GROUP BY C.CATEGORYID, C.NAME;
GO
